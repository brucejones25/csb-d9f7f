{"version":3,"sources":["index.js"],"names":["stackedBarOptions","accessibility","scales","x","title","y","formatter","axisValue","concat","yMaxAdjuster","yMaxValue","stacked","legendClickable","containerResizable","App","state","data","labels","datasets","label","backgroundColors","defaultColors","updateData","_this","Math","random","setState","Object","_tmp_deploys_d9f7f_ckuj6d6iq01290us85b0z47a1_source_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this2","this","console","log","barChart","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_carbon_charts_react__WEBPACK_IMPORTED_MODULE_9__","options","width","height","ref","bC","onClick","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"ksBAOA,IAAMA,EAAoB,CACxBC,eAAe,EACfC,OAAQ,CACNC,EAAG,CACDC,MAAO,6BAETC,EAAG,CACDC,UAAW,SAAAC,GACT,SAAAC,OAAUD,EAAY,IAAtB,MAEFE,aAAc,SAAAC,GAAS,OAAgB,IAAZA,GAC3BC,SAAS,IAGbC,iBAAiB,EACjBC,oBAAoB,GAGhBC,oMACJC,MAAQ,CACNC,KAAM,CACJC,OAAQ,CAAC,MAAO,OAAQ,OAAQ,aAAc,QAC9CC,SAAU,CACR,CACEC,MAAO,YACPC,iBAAkB,CAACC,gBAAc,IACjCL,KAAM,CAAC,KAAO,MAAO,MAAO,MAAO,QAErC,CACEG,MAAO,YACPC,iBAAkB,CAACC,gBAAc,IACjCL,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,QAErC,CACEG,MAAO,YACPC,iBAAkB,CAACC,gBAAc,IACjCL,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,aAM3CM,WAAa,WACX,IAAMN,EAAOO,EAAKR,MAAMC,KACxBA,EAAKE,SAAS,GAAGF,KAAK,GAAqB,KAAhBQ,KAAKC,SAChCT,EAAKE,SAAS,GAAGF,KAAK,GAAqB,MAAhBQ,KAAKC,SAEhCF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKJ,EAAKR,MADV,CAEEC,uDAIJ,WAAS,IAAAa,EAAAC,KAEP,OADAC,QAAQC,IAAI,YAAaF,KAAKG,UAE5BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACEtB,KAAMc,KAAKf,MAAMC,KACjBuB,QAASvC,EACTwC,MAAM,OACNC,OAAQ,IACRC,IAAK,SAAAC,GAAE,OAAKd,EAAKI,SAAWU,KAG9BT,EAAAC,EAAAC,cAAA,UAAQQ,QAASd,KAAKR,YAAtB,uBA/CUuB,IAAMC,WAqDlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOjB,EAAAC,EAAAC,cAACtB,EAAD,MAASiC","file":"static/js/main.c1551df3.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { defaultColors } from \"@carbon/charts\";\nimport { BarChart } from \"@carbon/charts-react\";\nimport \"@carbon/charts/style.css\";\n\nconst stackedBarOptions = {\n  accessibility: false,\n  scales: {\n    x: {\n      title: \"2018 Annual Sales Figures\"\n    },\n    y: {\n      formatter: axisValue => {\n        return `${axisValue / 1000}k`;\n      },\n      yMaxAdjuster: yMaxValue => yMaxValue * 1.1,\n      stacked: true\n    }\n  },\n  legendClickable: true,\n  containerResizable: true\n};\n\nclass App extends React.Component {\n  state = {\n    data: {\n      labels: [\"Qty\", \"More\", \"Sold\", \"Restocking\", \"Misc\"],\n      datasets: [\n        {\n          label: \"Dataset 1\",\n          backgroundColors: [defaultColors[0]],\n          data: [65000, 29123, 35213, 51213, 16932]\n        },\n        {\n          label: \"Dataset 2\",\n          backgroundColors: [defaultColors[1]],\n          data: [32432, 21312, 56456, 21312, 34234]\n        },\n        {\n          label: \"Dataset 3\",\n          backgroundColors: [defaultColors[2]],\n          data: [12312, 23232, 34232, 12312, 34234]\n        }\n      ]\n    }\n  };\n\n  updateData = () => {\n    const data = this.state.data;\n    data.datasets[0].data[0] = Math.random() * 65000;\n    data.datasets[0].data[3] = Math.random() * 51213;\n\n    this.setState({\n      ...this.state,\n      data\n    });\n  };\n\n  render() {\n    console.log(\"BAR CHART\", this.barChart);\n    return (\n      <div className=\"App\">\n        <BarChart\n          data={this.state.data}\n          options={stackedBarOptions}\n          width=\"100%\"\n          height={400}\n          ref={bC => (this.barChart = bC)}\n        />\n\n        <button onClick={this.updateData}>Test update</button>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}